Last login: Wed Oct 16 20:50:24 on ttys000

The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongod --port 27017 --dbpath /var/lib/mongodb
2019-10-16T20:52:26.809-0400 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2019-10-16T20:52:26.813-0400 I  CONTROL  [initandlisten] MongoDB starting : pid=41553 port=27017 dbpath=/var/lib/mongodb 64-bit host=Juniperui-MacBook-Pro.local
2019-10-16T20:52:26.813-0400 I  CONTROL  [initandlisten] db version v4.2.0
2019-10-16T20:52:26.813-0400 I  CONTROL  [initandlisten] git version: a4b751dcf51dd249c5865812b390cfd1c0129c30
2019-10-16T20:52:26.813-0400 I  CONTROL  [initandlisten] allocator: system
2019-10-16T20:52:26.813-0400 I  CONTROL  [initandlisten] modules: none
2019-10-16T20:52:26.813-0400 I  CONTROL  [initandlisten] build environment:
2019-10-16T20:52:26.813-0400 I  CONTROL  [initandlisten]     distarch: x86_64
2019-10-16T20:52:26.813-0400 I  CONTROL  [initandlisten]     target_arch: x86_64
2019-10-16T20:52:26.813-0400 I  CONTROL  [initandlisten] options: { net: { port: 27017 }, storage: { dbPath: "/var/lib/mongodb" } }
2019-10-16T20:52:26.814-0400 E  STORAGE  [initandlisten] Failed to set up listener: SocketException: Address already in use
2019-10-16T20:52:26.814-0400 I  CONTROL  [initandlisten] now exiting
2019-10-16T20:52:26.814-0400 I  CONTROL  [initandlisten] shutting down with code:48
(base) Juniperui-MacBook-Pro:~ junipersohn$ 
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongod --port 27017 --dbpath /var/lib/mongodb
2019-10-16T20:53:03.335-0400 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2019-10-16T20:53:03.337-0400 I  CONTROL  [initandlisten] MongoDB starting : pid=41556 port=27017 dbpath=/var/lib/mongodb 64-bit host=Juniperui-MacBook-Pro.local
2019-10-16T20:53:03.337-0400 I  CONTROL  [initandlisten] db version v4.2.0
2019-10-16T20:53:03.337-0400 I  CONTROL  [initandlisten] git version: a4b751dcf51dd249c5865812b390cfd1c0129c30
2019-10-16T20:53:03.337-0400 I  CONTROL  [initandlisten] allocator: system
2019-10-16T20:53:03.337-0400 I  CONTROL  [initandlisten] modules: none
2019-10-16T20:53:03.337-0400 I  CONTROL  [initandlisten] build environment:
2019-10-16T20:53:03.337-0400 I  CONTROL  [initandlisten]     distarch: x86_64
2019-10-16T20:53:03.338-0400 I  CONTROL  [initandlisten]     target_arch: x86_64
2019-10-16T20:53:03.338-0400 I  CONTROL  [initandlisten] options: { net: { port: 27017 }, storage: { dbPath: "/var/lib/mongodb" } }
2019-10-16T20:53:03.339-0400 E  STORAGE  [initandlisten] Failed to set up listener: SocketException: Address already in use
2019-10-16T20:53:03.340-0400 I  CONTROL  [initandlisten] now exiting
2019-10-16T20:53:03.340-0400 I  CONTROL  [initandlisten] shutting down with code:48
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongod --auth --port 27017 --dbpath /var/lib/mongodb
2019-10-16T21:11:43.400-0400 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2019-10-16T21:11:43.409-0400 I  CONTROL  [initandlisten] MongoDB starting : pid=41641 port=27017 dbpath=/var/lib/mongodb 64-bit host=Juniperui-MacBook-Pro.local
2019-10-16T21:11:43.409-0400 I  CONTROL  [initandlisten] db version v4.2.0
2019-10-16T21:11:43.409-0400 I  CONTROL  [initandlisten] git version: a4b751dcf51dd249c5865812b390cfd1c0129c30
2019-10-16T21:11:43.409-0400 I  CONTROL  [initandlisten] allocator: system
2019-10-16T21:11:43.409-0400 I  CONTROL  [initandlisten] modules: none
2019-10-16T21:11:43.409-0400 I  CONTROL  [initandlisten] build environment:
2019-10-16T21:11:43.409-0400 I  CONTROL  [initandlisten]     distarch: x86_64
2019-10-16T21:11:43.409-0400 I  CONTROL  [initandlisten]     target_arch: x86_64
2019-10-16T21:11:43.409-0400 I  CONTROL  [initandlisten] options: { net: { port: 27017 }, security: { authorization: "enabled" }, storage: { dbPath: "/var/lib/mongodb" } }
2019-10-16T21:11:43.409-0400 I  STORAGE  [initandlisten] exception in initAndListen: NonExistentPath: Data directory /var/lib/mongodb not found., terminating
2019-10-16T21:11:43.409-0400 I  NETWORK  [initandlisten] shutdown: going to close listening sockets...
2019-10-16T21:11:43.409-0400 I  NETWORK  [initandlisten] removing socket file: /tmp/mongodb-27017.sock
2019-10-16T21:11:43.409-0400 I  -        [initandlisten] Stopping further Flow Control ticket acquisitions.
2019-10-16T21:11:43.409-0400 I  CONTROL  [initandlisten] now exiting
2019-10-16T21:11:43.409-0400 I  CONTROL  [initandlisten] shutting down with code:100
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongod --auth
2019-10-16T21:12:03.409-0400 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2019-10-16T21:12:03.417-0400 I  CONTROL  [initandlisten] MongoDB starting : pid=41642 port=27017 dbpath=/data/db 64-bit host=Juniperui-MacBook-Pro.local
2019-10-16T21:12:03.417-0400 I  CONTROL  [initandlisten] db version v4.2.0
2019-10-16T21:12:03.417-0400 I  CONTROL  [initandlisten] git version: a4b751dcf51dd249c5865812b390cfd1c0129c30
2019-10-16T21:12:03.417-0400 I  CONTROL  [initandlisten] allocator: system
2019-10-16T21:12:03.417-0400 I  CONTROL  [initandlisten] modules: none
2019-10-16T21:12:03.418-0400 I  CONTROL  [initandlisten] build environment:
2019-10-16T21:12:03.418-0400 I  CONTROL  [initandlisten]     distarch: x86_64
2019-10-16T21:12:03.418-0400 I  CONTROL  [initandlisten]     target_arch: x86_64
2019-10-16T21:12:03.418-0400 I  CONTROL  [initandlisten] options: { security: { authorization: "enabled" } }
2019-10-16T21:12:03.418-0400 I  STORAGE  [initandlisten] exception in initAndListen: NonExistentPath: Data directory /data/db not found., terminating
2019-10-16T21:12:03.419-0400 I  NETWORK  [initandlisten] shutdown: going to close listening sockets...
2019-10-16T21:12:03.419-0400 I  NETWORK  [initandlisten] removing socket file: /tmp/mongodb-27017.sock
2019-10-16T21:12:03.419-0400 I  -        [initandlisten] Stopping further Flow Control ticket acquisitions.
2019-10-16T21:12:03.419-0400 I  CONTROL  [initandlisten] now exiting
2019-10-16T21:12:03.419-0400 I  CONTROL  [initandlisten] shutting down with code:100
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017  --authenticationDatabase "admin" -u "myUserAdmin" -p
MongoDB shell version v4.2.0
Enter password: 
connecting to: mongodb://127.0.0.1:27017/?authSource=admin&compressors=disabled&gssapiServiceName=mongodb
2019-10-16T21:12:39.699-0400 E  QUERY    [js] Error: couldn't connect to server 127.0.0.1:27017, connection attempt failed: SocketException: Error connecting to 127.0.0.1:27017 :: caused by :: Connection refused :
connect@src/mongo/shell/mongo.js:341:17
@(connect):2:6
2019-10-16T21:12:39.712-0400 F  -        [main] exception: connect failed
2019-10-16T21:12:39.712-0400 E  -        [main] exiting with code 1
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongod --port 27017 --dbpath /var/lib/mongodb
2019-10-16T21:19:54.805-0400 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2019-10-16T21:19:54.812-0400 I  CONTROL  [initandlisten] MongoDB starting : pid=41667 port=27017 dbpath=/var/lib/mongodb 64-bit host=Juniperui-MacBook-Pro.local
2019-10-16T21:19:54.812-0400 I  CONTROL  [initandlisten] db version v4.2.0
2019-10-16T21:19:54.812-0400 I  CONTROL  [initandlisten] git version: a4b751dcf51dd249c5865812b390cfd1c0129c30
2019-10-16T21:19:54.812-0400 I  CONTROL  [initandlisten] allocator: system
2019-10-16T21:19:54.812-0400 I  CONTROL  [initandlisten] modules: none
2019-10-16T21:19:54.812-0400 I  CONTROL  [initandlisten] build environment:
2019-10-16T21:19:54.812-0400 I  CONTROL  [initandlisten]     distarch: x86_64
2019-10-16T21:19:54.812-0400 I  CONTROL  [initandlisten]     target_arch: x86_64
2019-10-16T21:19:54.812-0400 I  CONTROL  [initandlisten] options: { net: { port: 27017 }, storage: { dbPath: "/var/lib/mongodb" } }
2019-10-16T21:19:54.819-0400 I  STORAGE  [initandlisten] exception in initAndListen: NonExistentPath: Data directory /var/lib/mongodb not found., terminating
2019-10-16T21:19:54.819-0400 I  NETWORK  [initandlisten] shutdown: going to close listening sockets...
2019-10-16T21:19:54.819-0400 I  NETWORK  [initandlisten] removing socket file: /tmp/mongodb-27017.sock
2019-10-16T21:19:54.820-0400 I  -        [initandlisten] Stopping further Flow Control ticket acquisitions.
2019-10-16T21:19:54.820-0400 I  CONTROL  [initandlisten] now exiting
2019-10-16T21:19:54.820-0400 I  CONTROL  [initandlisten] shutting down with code:100
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongod
2019-10-16T21:21:48.193-0400 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2019-10-16T21:21:48.225-0400 I  CONTROL  [initandlisten] MongoDB starting : pid=41670 port=27017 dbpath=/data/db 64-bit host=Juniperui-MacBook-Pro.local
2019-10-16T21:21:48.225-0400 I  CONTROL  [initandlisten] db version v4.2.0
2019-10-16T21:21:48.225-0400 I  CONTROL  [initandlisten] git version: a4b751dcf51dd249c5865812b390cfd1c0129c30
2019-10-16T21:21:48.225-0400 I  CONTROL  [initandlisten] allocator: system
2019-10-16T21:21:48.225-0400 I  CONTROL  [initandlisten] modules: none
2019-10-16T21:21:48.225-0400 I  CONTROL  [initandlisten] build environment:
2019-10-16T21:21:48.225-0400 I  CONTROL  [initandlisten]     distarch: x86_64
2019-10-16T21:21:48.225-0400 I  CONTROL  [initandlisten]     target_arch: x86_64
2019-10-16T21:21:48.225-0400 I  CONTROL  [initandlisten] options: {}
2019-10-16T21:21:48.227-0400 I  STORAGE  [initandlisten] exception in initAndListen: NonExistentPath: Data directory /data/db not found., terminating
2019-10-16T21:21:48.228-0400 I  NETWORK  [initandlisten] shutdown: going to close listening sockets...
2019-10-16T21:21:48.228-0400 I  NETWORK  [initandlisten] removing socket file: /tmp/mongodb-27017.sock
2019-10-16T21:21:48.228-0400 I  -        [initandlisten] Stopping further Flow Control ticket acquisitions.
2019-10-16T21:21:48.228-0400 I  CONTROL  [initandlisten] now exiting
2019-10-16T21:21:48.228-0400 I  CONTROL  [initandlisten] shutting down with code:100
(base) Juniperui-MacBook-Pro:~ junipersohn$ top
(base) Juniperui-MacBook-Pro:~ junipersohn$ pgrep mongo
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services stop mongodb
Error: No available formula with the name "mongodb" 
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo
MongoDB shell version v4.2.0
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
2019-10-16T21:25:50.131-0400 E  QUERY    [js] Error: couldn't connect to server 127.0.0.1:27017, connection attempt failed: SocketException: Error connecting to 127.0.0.1:27017 :: caused by :: Connection refused :
connect@src/mongo/shell/mongo.js:341:17
@(connect):2:6
2019-10-16T21:25:50.134-0400 F  -        [main] exception: connect failed
2019-10-16T21:25:50.134-0400 E  -        [main] exiting with code 1
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongod
2019-10-16T21:26:01.460-0400 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2019-10-16T21:26:01.466-0400 I  CONTROL  [initandlisten] MongoDB starting : pid=41826 port=27017 dbpath=/data/db 64-bit host=Juniperui-MacBook-Pro.local
2019-10-16T21:26:01.466-0400 I  CONTROL  [initandlisten] db version v4.2.0
2019-10-16T21:26:01.466-0400 I  CONTROL  [initandlisten] git version: a4b751dcf51dd249c5865812b390cfd1c0129c30
2019-10-16T21:26:01.466-0400 I  CONTROL  [initandlisten] allocator: system
2019-10-16T21:26:01.466-0400 I  CONTROL  [initandlisten] modules: none
2019-10-16T21:26:01.466-0400 I  CONTROL  [initandlisten] build environment:
2019-10-16T21:26:01.466-0400 I  CONTROL  [initandlisten]     distarch: x86_64
2019-10-16T21:26:01.466-0400 I  CONTROL  [initandlisten]     target_arch: x86_64
2019-10-16T21:26:01.466-0400 I  CONTROL  [initandlisten] options: {}
2019-10-16T21:26:01.469-0400 I  STORAGE  [initandlisten] exception in initAndListen: NonExistentPath: Data directory /data/db not found., terminating
2019-10-16T21:26:01.469-0400 I  NETWORK  [initandlisten] shutdown: going to close listening sockets...
2019-10-16T21:26:01.469-0400 I  NETWORK  [initandlisten] removing socket file: /tmp/mongodb-27017.sock
2019-10-16T21:26:01.470-0400 I  -        [initandlisten] Stopping further Flow Control ticket acquisitions.
2019-10-16T21:26:01.470-0400 I  CONTROL  [initandlisten] now exiting
2019-10-16T21:26:01.470-0400 I  CONTROL  [initandlisten] shutting down with code:100
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services start mongodb
Error: No available formula with the name "mongodb" 
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services start mongodb-community@4.2
Service `mongodb-community` already started, use `brew services restart mongodb-community` to restart.
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo
MongoDB shell version v4.2.0
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
2019-10-16T21:27:12.905-0400 E  QUERY    [js] Error: couldn't connect to server 127.0.0.1:27017, connection attempt failed: SocketException: Error connecting to 127.0.0.1:27017 :: caused by :: Connection refused :
connect@src/mongo/shell/mongo.js:341:17
@(connect):2:6
2019-10-16T21:27:12.908-0400 F  -        [main] exception: connect failed
2019-10-16T21:27:12.908-0400 E  -        [main] exiting with code 1
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services start mongodb-community@4.2
^[[DService `mongodb-community` already started, use `brew services restart mongodb-community` to restart.
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services start mongodb-community@4.2
^[[DService `mongodb-community` already started, use `brew services restart mongodb-community` to restart.
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services stop mongodb-community@4.2
Stopping `mongodb-community`... (might take a while)
==> Successfully stopped `mongodb-community` (label: homebrew.mxcl.mongodb-commu
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services start mongodb-community@4.2
==> Successfully started `mongodb-community` (label: homebrew.mxcl.mongodb-commu
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo
MongoDB shell version v4.2.0
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("c74a375a-3ce4-4fee-bf00-9dae4528f119") }
MongoDB server version: 4.2.0
Server has startup warnings: 
2019-10-16T21:28:36.633-0400 I  CONTROL  [initandlisten] 
2019-10-16T21:28:36.633-0400 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-16T21:28:36.633-0400 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-16T21:28:36.633-0400 I  CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> show dbs
admin   0.000GB
config  0.000GB
hw05    0.000GB
local   0.000GB
> use admin
switched to db admin
> db.createUser(
...   {
...     user: "myUserAdmin",
...     pwd: passwordPrompt(), // or cleartext password
...     roles: [ { role: "userAdminAnyDatabase", db: "admin" }, "readWriteAnyDatabase" ]
...   }
... )
Enter password: 
2019-10-16T21:30:42.335-0400 E  QUERY    [js] uncaught exception: Error: couldn't add user: User "myUserAdmin@admin" already exists :
_getErrorWithCode@src/mongo/shell/utils.js:25:13
DB.prototype.createUser@src/mongo/shell/db.js:1370:11
@(shell):1:1
> db.createUser(
...   {
...     user: "myUserAdmin",
...     pwd: passwordPrompt(), // or cleartext password
...     roles: [ { role: "userAdminAnyDatabase", db: "admin" }, "readWriteAnyDatabase" ]
...   }
... )
Enter password: 
2019-10-16T21:31:12.820-0400 E  QUERY    [js] uncaught exception: Error: couldn't add user: User "myUserAdmin@admin" already exists :
_getErrorWithCode@src/mongo/shell/utils.js:25:13
DB.prototype.createUser@src/mongo/shell/db.js:1370:11
@(shell):1:1
> db.adminCommand( { shutdown: 1 } )
2019-10-16T21:32:10.423-0400 I  NETWORK  [js] DBClientConnection failed to receive message from 127.0.0.1:27017 - HostUnreachable: Connection closed by peer
2019-10-16T21:32:10.426-0400 E  QUERY    [js] uncaught exception: Error: error doing query: failed: network error while attempting to run command 'shutdown' on host '127.0.0.1:27017'  :
DB.prototype.runCommand@src/mongo/shell/db.js:169:19
DB.prototype.adminCommand@src/mongo/shell/db.js:186:16
@(shell):1:1
2019-10-16T21:32:10.427-0400 I  NETWORK  [js] trying reconnect to 127.0.0.1:27017 failed
2019-10-16T21:32:10.428-0400 I  NETWORK  [js] reconnect 127.0.0.1:27017 failed failed 
> ^C
bye
2019-10-16T21:32:36.807-0400 I  NETWORK  [js] trying reconnect to 127.0.0.1:27017 failed
2019-10-16T21:32:36.807-0400 I  NETWORK  [js] reconnect 127.0.0.1:27017 failed failed 
2019-10-16T21:32:36.808-0400 I  QUERY    [js] Failed to end session { id: UUID("c74a375a-3ce4-4fee-bf00-9dae4528f119") } due to SocketException: socket exception [CONNECT_ERROR] server [couldn't connect to server 127.0.0.1:27017, connection attempt failed: SocketException: Error connecting to 127.0.0.1:27017 :: caused by :: Connection refused]
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services stop mongodb-community@4.2
Stopping `mongodb-community`... (might take a while)
==> Successfully stopped `mongodb-community` (label: homebrew.mxcl.mongodb-commu
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongod
2019-10-16T21:33:30.931-0400 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2019-10-16T21:33:30.935-0400 I  CONTROL  [initandlisten] MongoDB starting : pid=42865 port=27017 dbpath=/data/db 64-bit host=Juniperui-MacBook-Pro.local
2019-10-16T21:33:30.935-0400 I  CONTROL  [initandlisten] db version v4.2.0
2019-10-16T21:33:30.935-0400 I  CONTROL  [initandlisten] git version: a4b751dcf51dd249c5865812b390cfd1c0129c30
2019-10-16T21:33:30.935-0400 I  CONTROL  [initandlisten] allocator: system
2019-10-16T21:33:30.935-0400 I  CONTROL  [initandlisten] modules: none
2019-10-16T21:33:30.935-0400 I  CONTROL  [initandlisten] build environment:
2019-10-16T21:33:30.935-0400 I  CONTROL  [initandlisten]     distarch: x86_64
2019-10-16T21:33:30.935-0400 I  CONTROL  [initandlisten]     target_arch: x86_64
2019-10-16T21:33:30.935-0400 I  CONTROL  [initandlisten] options: {}
2019-10-16T21:33:30.938-0400 I  STORAGE  [initandlisten] exception in initAndListen: NonExistentPath: Data directory /data/db not found., terminating
2019-10-16T21:33:30.938-0400 I  NETWORK  [initandlisten] shutdown: going to close listening sockets...
2019-10-16T21:33:30.938-0400 I  NETWORK  [initandlisten] removing socket file: /tmp/mongodb-27017.sock
2019-10-16T21:33:30.938-0400 I  -        [initandlisten] Stopping further Flow Control ticket acquisitions.
2019-10-16T21:33:30.939-0400 I  CONTROL  [initandlisten] now exiting
2019-10-16T21:33:30.939-0400 I  CONTROL  [initandlisten] shutting down with code:100
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongod --auth --port 27017 --dbpath /var/lib/mongodb
2019-10-16T21:34:03.979-0400 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2019-10-16T21:34:03.988-0400 I  CONTROL  [initandlisten] MongoDB starting : pid=42866 port=27017 dbpath=/var/lib/mongodb 64-bit host=Juniperui-MacBook-Pro.local
2019-10-16T21:34:03.988-0400 I  CONTROL  [initandlisten] db version v4.2.0
2019-10-16T21:34:03.988-0400 I  CONTROL  [initandlisten] git version: a4b751dcf51dd249c5865812b390cfd1c0129c30
2019-10-16T21:34:03.988-0400 I  CONTROL  [initandlisten] allocator: system
2019-10-16T21:34:03.988-0400 I  CONTROL  [initandlisten] modules: none
2019-10-16T21:34:03.988-0400 I  CONTROL  [initandlisten] build environment:
2019-10-16T21:34:03.988-0400 I  CONTROL  [initandlisten]     distarch: x86_64
2019-10-16T21:34:03.988-0400 I  CONTROL  [initandlisten]     target_arch: x86_64
2019-10-16T21:34:03.988-0400 I  CONTROL  [initandlisten] options: { net: { port: 27017 }, security: { authorization: "enabled" }, storage: { dbPath: "/var/lib/mongodb" } }
2019-10-16T21:34:03.989-0400 I  STORAGE  [initandlisten] exception in initAndListen: NonExistentPath: Data directory /var/lib/mongodb not found., terminating
2019-10-16T21:34:03.989-0400 I  NETWORK  [initandlisten] shutdown: going to close listening sockets...
2019-10-16T21:34:03.989-0400 I  NETWORK  [initandlisten] removing socket file: /tmp/mongodb-27017.sock
2019-10-16T21:34:03.989-0400 I  -        [initandlisten] Stopping further Flow Control ticket acquisitions.
2019-10-16T21:34:03.989-0400 I  CONTROL  [initandlisten] now exiting
2019-10-16T21:34:03.990-0400 I  CONTROL  [initandlisten] shutting down with code:100
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services start mongodb-community@4.2 --auth
==> Successfully started `mongodb-community` (label: homebrew.mxcl.mongodb-commu
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017  --authenticationDatabase "admin" -u "myUserAdmin" -p
MongoDB shell version v4.2.0
Enter password: 
connecting to: mongodb://127.0.0.1:27017/?authSource=admin&compressors=disabled&gssapiServiceName=mongodb
2019-10-16T21:35:46.295-0400 E  QUERY    [js] Error: Authentication failed. :
connect@src/mongo/shell/mongo.js:341:17
@(connect):2:6
2019-10-16T21:35:46.298-0400 F  -        [main] exception: connect failed
2019-10-16T21:35:46.298-0400 E  -        [main] exiting with code 1
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017  --authenticationDatabase "admin" -u "myUserAdmin" -p
MongoDB shell version v4.2.0
Enter password: 
connecting to: mongodb://127.0.0.1:27017/?authSource=admin&compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("5d5926b0-ec24-4166-8f8f-6eb829915fef") }
MongoDB server version: 4.2.0
Server has startup warnings: 
2019-10-16T21:34:40.995-0400 I  CONTROL  [initandlisten] 
2019-10-16T21:34:40.995-0400 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-16T21:34:40.995-0400 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-16T21:34:40.995-0400 I  CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> show dbs
admin   0.000GB
config  0.000GB
hw05    0.000GB
local   0.000GB
> use test
switched to db test
> use test
switched to db test
> db.createUser(
...   {
...     user: "myTester",
...     pwd:  passwordPrompt(),   // or cleartext password
...     roles: [ { role: "readWrite", db: "test" },
...              { role: "read", db: "reporting" } ]
...   }
... ^C

> db.createUser(
...   {
...     user: "myTester",
...     pwd:  passwordPrompt(),   // or cleartext password
...     roles: [ { role: "readWrite", db: "test" },
...              { role: "read", db: "reporting" } ]
...   }
... )
Enter password: 
2019-10-16T21:38:05.311-0400 E  QUERY    [js] uncaught exception: Error: couldn't add user: User "myTester@test" already exists :
_getErrorWithCode@src/mongo/shell/utils.js:25:13
DB.prototype.createUser@src/mongo/shell/db.js:1370:11
@(shell):1:1
> db.createUser(
...   {
...     user: "myTester",
...     pwd:  passwordPrompt(),   // or cleartext password
...     roles: [ { role: "readWrite", db: "test" },
...              { role: "read", db: "reporting" } ]
...   }
... )
Enter password: 
2019-10-16T21:38:59.229-0400 E  QUERY    [js] uncaught exception: Error: couldn't add user: User "myTester@test" already exists :
_getErrorWithCode@src/mongo/shell/utils.js:25:13
DB.prototype.createUser@src/mongo/shell/db.js:1370:11
@(shell):1:1
> db.createUser(
...   {
...     user: "myTester2”,
2019-10-16T21:39:15.986-0400 E  QUERY    [js] uncaught exception: SyntaxError: "" literal not terminated before end of script :
@(shell):3:22
>     pwd:  passwordPrompt(),   // or cleartext password
...     roles: [ { role: "readWrite", db: "test" },
...              { role: "read", db: "reporting" } ]
2019-10-16T21:39:15.988-0400 E  QUERY    [js] uncaught exception: SyntaxError: unexpected token: ':' :
@(shell):2:9
>   }
2019-10-16T21:39:15.993-0400 E  QUERY    [js] uncaught exception: SyntaxError: expected expression, got '}' :
@(shell):1:0
> )db.createUser(
2019-10-16T21:39:41.685-0400 E  QUERY    [js] uncaught exception: SyntaxError: expected expression, got ')' :
@(shell):1:0
>   {
...     user: "myTester2”,
2019-10-16T21:39:41.687-0400 E  QUERY    [js] uncaught exception: SyntaxError: "" literal not terminated before end of script :
@(shell):2:22
>     pwd:  passwordPrompt(),
...     roles: [ { role: "readWrite", db: "test" },
...              { role: "read", db: "reporting" } ]
2019-10-16T21:39:41.690-0400 E  QUERY    [js] uncaught exception: SyntaxError: unexpected token: ':' :
@(shell):2:9
>   }
2019-10-16T21:39:41.695-0400 E  QUERY    [js] uncaught exception: SyntaxError: expected expression, got '}' :
@(shell):1:0
> db.createUser(
...   {
...     user: "myTester2”,
2019-10-16T21:39:54.840-0400 E  QUERY    [js] uncaught exception: SyntaxError: "" literal not terminated before end of script :
@(shell):3:22
>     pwd:  passwordPrompt(),
...     roles: [ { role: "readWrite", db: "test" },
...              { role: "read", db: "reporting" } ]
2019-10-16T21:39:54.841-0400 E  QUERY    [js] uncaught exception: SyntaxError: unexpected token: ':' :
@(shell):2:9
>   }
2019-10-16T21:39:54.842-0400 E  QUERY    [js] uncaught exception: SyntaxError: expected expression, got '}' :
@(shell):1:0
> pwd:  passwordPrompt(),     roles: [ { role: "readWrite", db: "test" },              { role: "read", db: "reporting" } ]^C
bye
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017  --authenticationDatabase "admin" -u "myUserAdmin" -p
MongoDB shell version v4.2.0
Enter password: 
connecting to: mongodb://127.0.0.1:27017/?authSource=admin&compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("a2a04c37-163e-4469-8f3d-f8f1107b8d48") }
MongoDB server version: 4.2.0
Server has startup warnings: 
2019-10-16T21:34:40.995-0400 I  CONTROL  [initandlisten] 
2019-10-16T21:34:40.995-0400 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-16T21:34:40.995-0400 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-16T21:34:40.995-0400 I  CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> show dbs
admin   0.000GB
config  0.000GB
hw05    0.000GB
local   0.000GB
> use test
switched to db test
> db.createUser(
...   {
...     user: "myTester",
...     pwd:  passwordPrompt(),   // or cleartext password
...     roles: [ { role: "readWrite", db: "test" },
...              { role: "read", db: "reporting" } ]
...   }
... )
Enter password: 
2019-10-16T21:41:53.940-0400 E  QUERY    [js] uncaught exception: Error: couldn't add user: User "myTester@test" already exists :
_getErrorWithCode@src/mongo/shell/utils.js:25:13
DB.prototype.createUser@src/mongo/shell/db.js:1370:11
@(shell):1:1
> db.createUser(
... ^C

> db.createUser({user: "newUser", pwd: passwordPrompt(), roles: [{role: "readWrite, db: "test"},{role: "read", db: "reporting"}]})
2019-10-16T21:44:34.766-0400 E  QUERY    [js] uncaught exception: SyntaxError: missing } after property list :
@(shell):1:87
> db.createUser({user: "newUser", pwd: passwordPrompt(), roles: [{role: "readWrite", db: "test"},{role: "read", db: "reporting"}]})
Enter password: 
Successfully added user: {
	"user" : "newUser",
	"roles" : [
		{
			"role" : "readWrite",
			"db" : "test"
		},
		{
			"role" : "read",
			"db" : "reporting"
		}
	]
}
> ^C
bye
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017 -u "myTester" --authenticationDatabase "test" -p
MongoDB shell version v4.2.0
Enter password: 
connecting to: mongodb://127.0.0.1:27017/?authSource=test&compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("8e8830b9-6d43-4c7b-96f3-9ae98e9efe66") }
MongoDB server version: 4.2.0
Server has startup warnings: 
2019-10-16T21:34:40.995-0400 I  CONTROL  [initandlisten] 
2019-10-16T21:34:40.995-0400 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-16T21:34:40.995-0400 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-16T21:34:40.995-0400 I  CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> show collections
> db.foo.insert( { x: 1, y: 1 } )
WriteResult({ "nInserted" : 1 })
> db.find()
2019-10-16T21:49:14.197-0400 E  QUERY    [js] uncaught exception: TypeError: db.find is not a function :
@(shell):1:1
> db.foo.find()
{ "_id" : ObjectId("5da7c891f48bb00c8063ecd7"), "x" : 1, "y" : 1 }
> use hwk05
switched to db hwk05
> show collections
> show dbd
2019-10-16T21:50:05.385-0400 E  QUERY    [js] uncaught exception: Error: don't know how to show [dbd] :
shellHelper.show@src/mongo/shell/utils.js:1139:11
shellHelper@src/mongo/shell/utils.js:790:15
@(shellhelp2):1:1
> show dbs
admin   0.000GB
config  0.000GB
hw05    0.000GB
local   0.000GB
test    0.000GB
> use hw05
switched to db hw05
> show collections
reviews
> hw05.reviews.find()
2019-10-16T21:50:29.886-0400 E  QUERY    [js] uncaught exception: ReferenceError: hw05 is not defined :
@(shell):1:1
> db.reviews.find()
{ "_id" : ObjectId("5da698469d8f6e18cbe4dff5"), "courseNumber" : "CSCI-UA.0101", "courseName" : "Intro to CS", "semester" : "Fall", "year" : 2015, "professor" : "McTeacherson", "review" : "Now I can sort like pro!" }
{ "_id" : ObjectId("5da6ab1e9d8f6e18cbe4dff6"), "courseNumber" : "CSCI-UA.0480", "courseName" : "AIT", "semester" : "Spring", "year" : "2018", "professor" : "Versoza", "review" : "The answer is always undefined" }
{ "_id" : ObjectId("5da6ab809d8f6e18cbe4dff7"), "courseNumber" : "CSCI-UA.0002", "courseName" : "Intro To Computer Programming", "semester" : "Fall", "year" : "2018", "professor" : "Foobarbaz", "review" : "OMG you have to take this course" }
> ^C
bye
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services stop mongodb-community@4.2
Stopping `mongodb-community`... (might take a while)
==> Successfully stopped `mongodb-community` (label: homebrew.mxcl.mongodb-commu
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services start mongodb-community@4.2 --auth
==> Successfully started `mongodb-community` (label: homebrew.mxcl.mongodb-commu
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services stop mongodb-community@4.2
Stopping `mongodb-community`... (might take a while)
==> Successfully stopped `mongodb-community` (label: homebrew.mxcl.mongodb-commu
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services start mongodb-community@4.2
==> Successfully started `mongodb-community` (label: homebrew.mxcl.mongodb-commu
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo
MongoDB shell version v4.2.0
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("d71a9a58-f2f0-4704-a4ff-2e1801ca4829") }
MongoDB server version: 4.2.0
Server has startup warnings: 
2019-10-16T21:53:38.977-0400 I  CONTROL  [initandlisten] 
2019-10-16T21:53:38.977-0400 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-16T21:53:38.977-0400 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-16T21:53:38.977-0400 I  CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> show dbs
admin   0.000GB
config  0.000GB
hw05    0.000GB
local   0.000GB
test    0.000GB
> ^C
bye
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services start mongodb-community@4.2 --auth
Service `mongodb-community` already started, use `brew services restart mongodb-community` to restart.
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services stop mongodb-community@4.2
Stopping `mongodb-community`... (might take a while)
==> Successfully stopped `mongodb-community` (label: homebrew.mxcl.mongodb-commu
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services start mongodb-community@4.2
==> Successfully started `mongodb-community` (label: homebrew.mxcl.mongodb-commu
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo
MongoDB shell version v4.2.0
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("42a70fdc-b073-4cc0-9e6d-94112c42bff2") }
MongoDB server version: 4.2.0
Server has startup warnings: 
2019-10-16T21:58:12.577-0400 I  CONTROL  [initandlisten] 
2019-10-16T21:58:12.577-0400 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-16T21:58:12.577-0400 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-16T21:58:12.577-0400 I  CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> ^C
bye
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services stop mongodb-community@4.2
Stopping `mongodb-community`... (might take a while)
==> Successfully stopped `mongodb-community` (label: homebrew.mxcl.mongodb-commu
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services start mongodb-community@4.2 --auth
==> Successfully started `mongodb-community` (label: homebrew.mxcl.mongodb-commu
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017  --authenticationDatabase "admin" -u "myUserAdmin" -p
MongoDB shell version v4.2.0
Enter password: 
connecting to: mongodb://127.0.0.1:27017/?authSource=admin&compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("d8b839ed-a8ec-44c1-8cc0-e0e2cc18cb6e") }
MongoDB server version: 4.2.0
Server has startup warnings: 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> use test
switched to db test
> db.createUser({user: "newUser2", pwd: passwordPrompt(), roles: [{role: "readWrite",db: "test"},{role: "read", db: "reporting"}]})
Enter password: 
Successfully added user: {
	"user" : "newUser2",
	"roles" : [
		{
			"role" : "readWrite",
			"db" : "test"
		},
		{
			"role" : "read",
			"db" : "reporting"
		}
	]
}
> ^C
bye
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017 -u "newUser2" --authenticationDatabase "test" -p
MongoDB shell version v4.2.0
Enter password: 
connecting to: mongodb://127.0.0.1:27017/?authSource=test&compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("d9943be0-fe02-4835-b74c-fb0a3db70c1d") }
MongoDB server version: 4.2.0
Server has startup warnings: 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> db.foo.insert( { x: 1, y: 1 } )
WriteResult({ "nInserted" : 1 })
> db.foo.find()
{ "_id" : ObjectId("5da7c891f48bb00c8063ecd7"), "x" : 1, "y" : 1 }
{ "_id" : ObjectId("5da7cc3c5d6aa6560b60bd7e"), "x" : 1, "y" : 1 }
> use hw05
switched to db hw05
> db.reviews.find()
{ "_id" : ObjectId("5da698469d8f6e18cbe4dff5"), "courseNumber" : "CSCI-UA.0101", "courseName" : "Intro to CS", "semester" : "Fall", "year" : 2015, "professor" : "McTeacherson", "review" : "Now I can sort like pro!" }
{ "_id" : ObjectId("5da6ab1e9d8f6e18cbe4dff6"), "courseNumber" : "CSCI-UA.0480", "courseName" : "AIT", "semester" : "Spring", "year" : "2018", "professor" : "Versoza", "review" : "The answer is always undefined" }
{ "_id" : ObjectId("5da6ab809d8f6e18cbe4dff7"), "courseNumber" : "CSCI-UA.0002", "courseName" : "Intro To Computer Programming", "semester" : "Fall", "year" : "2018", "professor" : "Foobarbaz", "review" : "OMG you have to take this course" }
> db.reviews.find().pretty()
{
	"_id" : ObjectId("5da698469d8f6e18cbe4dff5"),
	"courseNumber" : "CSCI-UA.0101",
	"courseName" : "Intro to CS",
	"semester" : "Fall",
	"year" : 2015,
	"professor" : "McTeacherson",
	"review" : "Now I can sort like pro!"
}
{
	"_id" : ObjectId("5da6ab1e9d8f6e18cbe4dff6"),
	"courseNumber" : "CSCI-UA.0480",
	"courseName" : "AIT",
	"semester" : "Spring",
	"year" : "2018",
	"professor" : "Versoza",
	"review" : "The answer is always undefined"
}
{
	"_id" : ObjectId("5da6ab809d8f6e18cbe4dff7"),
	"courseNumber" : "CSCI-UA.0002",
	"courseName" : "Intro To Computer Programming",
	"semester" : "Fall",
	"year" : "2018",
	"professor" : "Foobarbaz",
	"review" : "OMG you have to take this course"
}
> hw05.getUsers
2019-10-16T22:27:41.452-0400 E  QUERY    [js] uncaught exception: ReferenceError: hw05 is not defined :
@(shell):1:1
> ^C
bye
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services start mongodb-community@4.2
Service `mongodb-community` already started, use `brew services restart mongodb-community` to restart.
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo
MongoDB shell version v4.2.0
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("e152a21e-1332-4b26-9218-8f8c956f2ae3") }
MongoDB server version: 4.2.0
Server has startup warnings: 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> show dbs
admin   0.000GB
config  0.000GB
hw05    0.000GB
local   0.000GB
test    0.000GB
> ^C
bye
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo
MongoDB shell version v4.2.0
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("b6a8e5a8-94c4-43eb-8e8c-479340406161") }
MongoDB server version: 4.2.0
Server has startup warnings: 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> ^C
bye
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017 -u "newUser" hw05 -p
MongoDB shell version v4.2.0
Enter password: 
connecting to: mongodb://127.0.0.1:27017/hw05?compressors=disabled&gssapiServiceName=mongodb
2019-10-16T22:34:12.529-0400 E  QUERY    [js] Error: Authentication failed. :
connect@src/mongo/shell/mongo.js:341:17
@(connect):2:6
2019-10-16T22:34:12.531-0400 F  -        [main] exception: connect failed
2019-10-16T22:34:12.531-0400 E  -        [main] exiting with code 1
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017 -u "newUser" hw05 -p
MongoDB shell version v4.2.0
Enter password: 
connecting to: mongodb://127.0.0.1:27017/hw05?compressors=disabled&gssapiServiceName=mongodb
2019-10-16T22:34:29.839-0400 E  QUERY    [js] Error: Authentication failed. :
connect@src/mongo/shell/mongo.js:341:17
@(connect):2:6
2019-10-16T22:34:29.841-0400 F  -        [main] exception: connect failed
2019-10-16T22:34:29.841-0400 E  -        [main] exiting with code 1
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017 -u "newUser2" hw05 -p
MongoDB shell version v4.2.0
Enter password: 
connecting to: mongodb://127.0.0.1:27017/hw05?compressors=disabled&gssapiServiceName=mongodb
2019-10-16T23:12:07.051-0400 E  QUERY    [js] Error: Authentication failed. :
connect@src/mongo/shell/mongo.js:341:17
@(connect):2:6
2019-10-16T23:12:07.055-0400 F  -        [main] exception: connect failed
2019-10-16T23:12:07.055-0400 E  -        [main] exiting with code 1
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017 -u "newUser2" hw05 -p
MongoDB shell version v4.2.0
Enter password: 
connecting to: mongodb://127.0.0.1:27017/hw05?compressors=disabled&gssapiServiceName=mongodb
2019-10-16T23:12:17.515-0400 E  QUERY    [js] Error: Authentication failed. :
connect@src/mongo/shell/mongo.js:341:17
@(connect):2:6
2019-10-16T23:12:17.518-0400 F  -        [main] exception: connect failed
2019-10-16T23:12:17.518-0400 E  -        [main] exiting with code 1
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo
MongoDB shell version v4.2.0
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("d464f4c4-1699-4b5a-be41-55021203e3cc") }
MongoDB server version: 4.2.0
Server has startup warnings: 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> use hw05
switched to db hw05
> db.createUser({user: 'student', pwd: 'secret', roles: [{ role: 'root', db: 'hw05' }] })
2019-10-16T23:14:34.965-0400 E  QUERY    [js] uncaught exception: Error: couldn't add user: No role named root@hw05 :
_getErrorWithCode@src/mongo/shell/utils.js:25:13
DB.prototype.createUser@src/mongo/shell/db.js:1370:11
@(shell):1:1
> use admin
switched to db admin
> db.createUser({user: 'student', pwd: 'secret', roles: [{ role: 'root', db: 'hw05' }] })
2019-10-16T23:15:02.734-0400 E  QUERY    [js] uncaught exception: Error: couldn't add user: No role named root@hw05 :
_getErrorWithCode@src/mongo/shell/utils.js:25:13
DB.prototype.createUser@src/mongo/shell/db.js:1370:11
@(shell):1:1
> db.createUser({user: 'student', pwd: 'secret', roles: [{ role: 'readWrite', db: 'hw05' }] })
Successfully added user: {
	"user" : "student",
	"roles" : [
		{
			"role" : "readWrite",
			"db" : "hw05"
		}
	]
}
> mongo --port 27017 -u "yourNewUserName" hw05 -p
2019-10-16T23:16:56.247-0400 E  QUERY    [js] uncaught exception: SyntaxError: unexpected token: identifier :
@(shell):1:8
> mongo --port 27017 -u "student" hw05 -p
2019-10-16T23:17:07.741-0400 E  QUERY    [js] uncaught exception: SyntaxError: unexpected token: identifier :
@(shell):1:8
> ^C
bye
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017 -u "newUser2" hw05 -p
MongoDB shell version v4.2.0
Enter password: 
connecting to: mongodb://127.0.0.1:27017/hw05?compressors=disabled&gssapiServiceName=mongodb
2019-10-16T23:18:23.961-0400 E  QUERY    [js] Error: Authentication failed. :
connect@src/mongo/shell/mongo.js:341:17
@(connect):2:6
2019-10-16T23:18:23.965-0400 F  -        [main] exception: connect failed
2019-10-16T23:18:23.965-0400 E  -        [main] exiting with code 1
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017 -u "student" hw05 -p secret
MongoDB shell version v4.2.0
connecting to: mongodb://127.0.0.1:27017/hw05?compressors=disabled&gssapiServiceName=mongodb
2019-10-16T23:19:13.073-0400 E  QUERY    [js] Error: Authentication failed. :
connect@src/mongo/shell/mongo.js:341:17
@(connect):2:6
2019-10-16T23:19:13.075-0400 F  -        [main] exception: connect failed
2019-10-16T23:19:13.075-0400 E  -        [main] exiting with code 1
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017 -u student -p secret hw05
MongoDB shell version v4.2.0
connecting to: mongodb://127.0.0.1:27017/hw05?compressors=disabled&gssapiServiceName=mongodb
2019-10-16T23:19:57.388-0400 E  QUERY    [js] Error: Authentication failed. :
connect@src/mongo/shell/mongo.js:341:17
@(connect):2:6
2019-10-16T23:19:57.390-0400 F  -        [main] exception: connect failed
2019-10-16T23:19:57.390-0400 E  -        [main] exiting with code 1
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo
MongoDB shell version v4.2.0
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("37f08c24-06ec-4bda-b0c5-f22faa10496f") }
MongoDB server version: 4.2.0
Server has startup warnings: 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> db.getName()
test
> use hw05
switched to db hw05
> db.getUsers()
[ ]
> db.createUser({user: 'student', pwd: 'secret', roles: [{ role: 'readWrite', db: 'hw05' }] })
Successfully added user: {
	"user" : "student",
	"roles" : [
		{
			"role" : "readWrite",
			"db" : "hw05"
		}
	]
}
> db.getUsers()
[
	{
		"_id" : "hw05.student",
		"userId" : UUID("7f566e7b-5fe0-40a9-be59-83591488103b"),
		"user" : "student",
		"db" : "hw05",
		"roles" : [
			{
				"role" : "readWrite",
				"db" : "hw05"
			}
		],
		"mechanisms" : [
			"SCRAM-SHA-1",
			"SCRAM-SHA-256"
		]
	}
]
> ^C
bye
(base) Juniperui-MacBook-Pro:~ junipersohn$ mongo --port 27017 -u student -p secret hw05
MongoDB shell version v4.2.0
connecting to: mongodb://127.0.0.1:27017/hw05?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("33a92d37-47e1-4f99-9123-2af7891dd42f") }
MongoDB server version: 4.2.0
Server has startup warnings: 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-10-16T21:59:37.130-0400 I  CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> use hw05
switched to db hw05
> db.reviews.find()
{ "_id" : ObjectId("5da698469d8f6e18cbe4dff5"), "courseNumber" : "CSCI-UA.0101", "courseName" : "Intro to CS", "semester" : "Fall", "year" : 2015, "professor" : "McTeacherson", "review" : "Now I can sort like pro!" }
{ "_id" : ObjectId("5da6ab1e9d8f6e18cbe4dff6"), "courseNumber" : "CSCI-UA.0480", "courseName" : "AIT", "semester" : "Spring", "year" : "2018", "professor" : "Versoza", "review" : "The answer is always undefined" }
{ "_id" : ObjectId("5da6ab809d8f6e18cbe4dff7"), "courseNumber" : "CSCI-UA.0002", "courseName" : "Intro To Computer Programming", "semester" : "Fall", "year" : "2018", "professor" : "Foobarbaz", "review" : "OMG you have to take this course" }
> db.review.find()
> use hw05
switched to db hw05
> db.reviews.find()
{ "_id" : ObjectId("5da698469d8f6e18cbe4dff5"), "courseNumber" : "CSCI-UA.0101", "courseName" : "Intro to CS", "semester" : "Fall", "year" : 2015, "professor" : "McTeacherson", "review" : "Now I can sort like pro!" }
{ "_id" : ObjectId("5da6ab1e9d8f6e18cbe4dff6"), "courseNumber" : "CSCI-UA.0480", "courseName" : "AIT", "semester" : "Spring", "year" : "2018", "professor" : "Versoza", "review" : "The answer is always undefined" }
{ "_id" : ObjectId("5da6ab809d8f6e18cbe4dff7"), "courseNumber" : "CSCI-UA.0002", "courseName" : "Intro To Computer Programming", "semester" : "Fall", "year" : "2018", "professor" : "Foobarbaz", "review" : "OMG you have to take this course" }
> db.reviews.updateMany(year: "2018", {$set: {year: 2018}})
2019-10-17T01:41:35.347-0400 E  QUERY    [js] uncaught exception: SyntaxError: missing ) after argument list :
@(shell):1:26
> db.reviews.updateMany({year: "2018"}, {$set: {year: 2018}})
{ "acknowledged" : true, "matchedCount" : 2, "modifiedCount" : 2 }
> db.reviews.find()
{ "_id" : ObjectId("5da698469d8f6e18cbe4dff5"), "courseNumber" : "CSCI-UA.0101", "courseName" : "Intro to CS", "semester" : "Fall", "year" : 2015, "professor" : "McTeacherson", "review" : "Now I can sort like pro!" }
{ "_id" : ObjectId("5da6ab1e9d8f6e18cbe4dff6"), "courseNumber" : "CSCI-UA.0480", "courseName" : "AIT", "semester" : "Spring", "year" : 2018, "professor" : "Versoza", "review" : "The answer is always undefined" }
{ "_id" : ObjectId("5da6ab809d8f6e18cbe4dff7"), "courseNumber" : "CSCI-UA.0002", "courseName" : "Intro To Computer Programming", "semester" : "Fall", "year" : 2018, "professor" : "Foobarbaz", "review" : "OMG you have to take this course" }
> ^C
bye
(base) Juniperui-MacBook-Pro:~ junipersohn$ brew services stop mongodb-community@4.2
Stopping `mongodb-community`... (might take a while)
==> Successfully stopped `mongodb-community` (label: homebrew.mxcl.mongodb-commu
(base) Juniperui-MacBook-Pro:~ junipersohn$ 
